# Generated by Django 4.1.5 on 2023-01-10 09:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('approve', models.BooleanField(blank=True, default=False, help_text='FOR EMPLOYER', null=True)),
                ('accept', models.BooleanField(blank=True, default=False, help_text='FOR TASKER', null=True)),
            ],
            options={
                'db_table': 'e_bids',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, default='Others', max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'e_categories',
            },
        ),
        migrations.CreateModel(
            name='DFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('dfile', models.FileField(blank=True, null=True, upload_to='')),
                ('description', models.CharField(blank=True, help_text='Write Short File description here', max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(blank=True, help_text='Write Short job tittle here', max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='Write Details job delivarables  here', null=True)),
                ('price', models.FloatField(blank=True, help_text='Enter amount to pay per page-KES', null=True)),
                ('quantity', models.IntegerField(blank=True, help_text='Enter number of pages required', null=True)),
                ('finished_at', models.DateTimeField(blank=True, help_text='Enter submission Deadline.Tip- Enter time less than the actual! ', null=True)),
                ('display', models.BooleanField(blank=True, default=False, help_text='Check this button to make your job available in the market/dashboard')),
                ('revise', models.BooleanField(blank=True, default=False, help_text='FOR EMPLOYER')),
                ('accepted', models.BooleanField(blank=True, default=False, help_text='FOR EMPLOYER')),
                ('rejected', models.BooleanField(blank=True, default=False, help_text='FOR EMPLOYER')),
                ('rejection_description', models.TextField(blank=True, help_text='FOR EMPLOYER.Write Details why you reject the work done by  tasker  here', null=True)),
                ('rejected_work_accepted', models.BooleanField(blank=True, default=False, help_text='FOR TASKER,SUPPORT OR ADMIN.Admin to decide if the tasker refused to ACCEPT')),
                ('status', models.CharField(choices=[('AV', 'available'), ('PR', 'in-progress'), ('RW', 'in-review'), ('RV', 'in-revision'), ('CL', 'closed')], default='AV', max_length=100)),
            ],
            options={
                'db_table': 'e_jobs',
            },
        ),
        migrations.CreateModel(
            name='RevInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('description', models.TextField(blank=True, help_text='FOR EMPLOYER.Write Details revision details  here', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, default='Others', max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Sub Categories',
                'db_table': 'e_subcategories',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, default='escrew', max_length=100, null=True)),
            ],
            options={
                'db_table': 'e_types',
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('proof', models.TextField()),
                ('final', models.BooleanField(blank=True, default=False, help_text='DRAFT/FINAL')),
                ('dfile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.dfile')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.job')),
            ],
            options={
                'db_table': 'e_submissions',
            },
        ),
    ]
